{"ast":null,"code":"export default {\n  name: \"timer_clock\",\n\n  data() {\n    return {\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      task: '',\n      timerDisplay: '00:00:00',\n      table_lines: [],\n      timer: null,\n      startTime: null,\n      endTime: null\n    };\n  },\n\n  methods: {\n    start_timer_operat() {\n      const all_time = this.hours * 3600 + this.minutes * 60 + this.seconds;\n      this.startTime = new Date();\n      this.endTime = new Date(this.startTime.getTime() + all_time * 1000);\n      this.updateTimerDisplay();\n      this.timer = setInterval(() => this.updateTimer(), 1000);\n      event.preventDefault();\n    },\n\n    updateTimer() {\n      const now = new Date();\n\n      if (now >= this.endTime) {\n        this.stop_timer_operat();\n      } else {\n        this.updateTimerDisplay();\n      }\n    },\n\n    updateTimerDisplay() {\n      const now = new Date();\n      const timeLeft = Math.max(0, this.endTime - now);\n      const hours = Math.floor(timeLeft / 3600000);\n      const minutes = Math.floor(timeLeft % 3600000 / 60000);\n      const seconds = Math.floor(timeLeft % 60000 / 1000);\n      this.timerDisplay = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    },\n\n    pause_timer_operat() {\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      } else {\n        this.start_timer_operat();\n      }\n    },\n\n    stop_timer_operat() {\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n        this.timerDisplay = '00:00:00';\n        this.table_lines.push({\n          id: this.table_lines.length,\n          name: this.task,\n          start: this.startTime.toLocaleString(),\n          end: new Date().toLocaleString()\n        });\n      }\n    }\n\n  },\n\n  mounted() {}\n\n};","map":{"version":3,"mappings":"AA+EA,eAAe;EACbA,IAAI,EAAE,aADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,CADF;MAELC,OAAO,EAAE,CAFJ;MAGLC,OAAO,EAAE,CAHJ;MAILC,IAAI,EAAE,EAJD;MAKLC,YAAY,EAAE,UALT;MAMLC,WAAW,EAAE,EANR;MAOLC,KAAK,EAAE,IAPF;MAQLC,SAAS,EAAE,IARN;MASLC,OAAO,EAAE;IATJ,CAAP;EAWD,CAdY;;EAebC,OAAO,EAAE;IACPC,kBAAkB,GAAG;MACnB,MAAMC,QAAO,GAAI,KAAKX,KAAL,GAAa,IAAb,GAAoB,KAAKC,OAAL,GAAe,EAAnC,GAAwC,KAAKC,OAA9D;MACA,KAAKK,SAAL,GAAiB,IAAIK,IAAJ,EAAjB;MACA,KAAKJ,OAAL,GAAe,IAAII,IAAJ,CAAS,KAAKL,SAAL,CAAeM,OAAf,KAA2BF,QAAO,GAAI,IAA/C,CAAf;MACA,KAAKG,kBAAL;MACA,KAAKR,KAAL,GAAaS,WAAW,CAAC,MAAM,KAAKC,WAAL,EAAP,EAA2B,IAA3B,CAAxB;MACAC,KAAK,CAACC,cAAN;IACD,CARM;;IASPF,WAAW,GAAG;MACZ,MAAMG,GAAE,GAAI,IAAIP,IAAJ,EAAZ;;MACA,IAAIO,GAAE,IAAK,KAAKX,OAAhB,EAAyB;QACvB,KAAKY,iBAAL;MACF,CAFA,MAEO;QACL,KAAKN,kBAAL;MACF;IACD,CAhBM;;IAiBPA,kBAAkB,GAAG;MACnB,MAAMK,GAAE,GAAI,IAAIP,IAAJ,EAAZ;MACA,MAAMS,QAAO,GAAIC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKf,OAAL,GAAeW,GAA3B,CAAjB;MACA,MAAMnB,KAAI,GAAIsB,IAAI,CAACE,KAAL,CAAWH,QAAO,GAAI,OAAtB,CAAd;MACA,MAAMpB,OAAM,GAAIqB,IAAI,CAACE,KAAL,CAAYH,QAAO,GAAI,OAAZ,GAAuB,KAAlC,CAAhB;MACA,MAAMnB,OAAM,GAAIoB,IAAI,CAACE,KAAL,CAAYH,QAAO,GAAI,KAAZ,GAAqB,IAAhC,CAAhB;MACA,KAAKjB,YAAL,GAAqB,GAAEJ,KAAK,CAACyB,QAAN,GAAiBC,QAAjB,CAA0B,CAA1B,EAA6B,GAA7B,CAAkC,IAAGzB,OAAO,CAACwB,QAAR,GAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,GAA/B,CAAoC,IAAGxB,OAAO,CAACuB,QAAR,GAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,GAA/B,CAAoC,EAAvI;IACD,CAxBM;;IAyBPC,kBAAkB,GAAG;MACnB,IAAI,KAAKrB,KAAT,EAAgB;QACdsB,aAAa,CAAC,KAAKtB,KAAN,CAAb;QACA,KAAKA,KAAL,GAAa,IAAb;MACF,CAHA,MAGO;QACL,KAAKI,kBAAL;MACF;IACD,CAhCM;;IAiCPU,iBAAiB,GAAG;MAClB,IAAI,KAAKd,KAAT,EAAgB;QACdsB,aAAa,CAAC,KAAKtB,KAAN,CAAb;QACA,KAAKA,KAAL,GAAa,IAAb;QACA,KAAKF,YAAL,GAAoB,UAApB;QACA,KAAKC,WAAL,CAAiBwB,IAAjB,CAAsB;UACpBC,EAAE,EAAE,KAAKzB,WAAL,CAAiB0B,MADD;UAEpBjC,IAAI,EAAE,KAAKK,IAFS;UAGpB6B,KAAK,EAAE,KAAKzB,SAAL,CAAe0B,cAAf,EAHa;UAIpBC,GAAG,EAAE,IAAItB,IAAJ,GAAWqB,cAAX;QAJe,CAAtB;MAMF;IACF;;EA7CO,CAfI;;EA8DbE,OAAO,GAAG,CAET;;AAhEY,CAAf","names":["name","data","hours","minutes","seconds","task","timerDisplay","table_lines","timer","startTime","endTime","methods","start_timer_operat","all_time","Date","getTime","updateTimerDisplay","setInterval","updateTimer","event","preventDefault","now","stop_timer_operat","timeLeft","Math","max","floor","toString","padStart","pause_timer_operat","clearInterval","push","id","length","start","toLocaleString","end","mounted"],"sourceRoot":"","sources":["D:\\web\\lab3_1\\timer\\src\\pages\\timer_clock\\timer_clock.vue"],"sourcesContent":["<template>\r\n  <article>\r\n      <div class=\"timer_pos\">\r\n          <form id=\"timerForm\" >\r\n              <br><br>\r\n              <div id=\"timer\">{{ timerDisplay }}</div>\r\n          <br><br>\r\n          <h1 class=\"font_all1\">Введіть час:</h1>\r\n              <div class=\"timer_pos1\">\r\n                  <div class=\"circle_wrapper\">\r\n                      <div class=\"circle_type\">\r\n                          <input v-model.number=\"hours\" type=\"number\" id=\"form_inp_hour\" name=\"form_inp_hour\" min=\"0\">\r\n                      </div>\r\n                      <label for=\"form_inp_hour\">Години</label>\r\n                  </div>\r\n                  <div class=\"circle_wrapper\">\r\n                      <div class=\"circle_type\">\r\n                          <input v-model.number=\"minutes\" type=\"number\" id=\"form_inp_minute\" name=\"form_inp_minute\" min=\"0\" max=\"59\">\r\n                      </div>\r\n                      <label for=\"form_inp_minute\">Хвилини</label>\r\n                  </div>\r\n                  <div class=\"circle_wrapper\">\r\n                      <div class=\"circle_type\">\r\n                          <input v-model.number=\"seconds\" type=\"number\" id=\"form_inp_seconds\" name=\"form_inp_seconds\" min=\"0\" max=\"59\">\r\n                      </div>\r\n                      <label for=\"form_inp_seconds\">Секунди</label>\r\n                  </div>\r\n              </div>  \r\n              <br><br>\r\n              \r\n              <div>\r\n                  <label for=\"nameTimer\" class=\"form-label font_all\">Назва задачі:</label>\r\n                  <input v-model=\"task\" type=\"text\" id=\"name_timer\" class=\"form-control\" aria-describedby=\"NameTimer\"><br>\r\n                  \r\n                  <div class=\"but_orgn\">\r\n                    <button @click.prevent=\"start_timer_operat\" type=\"button\" id=\"start_button\" class=\"btn btn-primary but_1\">Запустити</button>\r\n                    <button @click=\"pause_timer_operat\" type=\"button\" id=\"pause_button\" class=\"btn btn-primary but_1\">Призупинити/продовжити</button><br>\r\n                    <button @click=\"stop_timer_operat\" type=\"button\" id=\"stop_button\" class=\"btn btn-primary but_1\">Зупинити</button><br>\r\n                  </div>\r\n                  <br><br>\r\n                  <div id=\"table_date\">\r\n                      \r\n\r\n                      <table class=\"table\">\r\n                          <thead>\r\n                              <tr>\r\n                              <th style=\"color:#A53C30\" scope=\"col\">Назва</th>\r\n                              <th style=\"color:#A53C30\" scope=\"col\">Початок таймера</th>\r\n                              <th style=\"color:#A53C30\" scope=\"col\">Завершення таймера</th>\r\n                              </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                              <tr v-for=\"line in table_lines\" :key=\"line.id\">\r\n                              <td>{{ line.name }}</td>\r\n                              <td>{{ line.start }}</td>\r\n                              <td>{{ line.end }}</td>\r\n                              </tr>\r\n                          </tbody>\r\n                          </table>\r\n                  </div>\r\n              </div>\r\n              \r\n              <br><br>\r\n          </form>\r\n      </div>\r\n  </article>\r\n\r\n  <footer>\r\n      <div cass=\"footer_link\">\r\n          <a class=\"nav-link\" href=\"user_registration.html\" style=\"color: white;\">Реєстрація</a>\r\n          <a class=\"nav-link\" href=\"login_in.html\" style=\"color: white;\">Вхід</a>\r\n          <a class=\"nav-link\" href=\"profile.html\" style=\"color: white;\">Профіль</a>\r\n          <a class=\"nav-link\" href=\"about_app.html\" style=\"color: white;\">Про додаток</a>\r\n          <a class=\"nav-link\" href=\"index.html\" style=\"color: white;\">Облік робочого часу</a>\r\n      </div>\r\n  </footer> \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"timer_clock\",\r\n  data() {\r\n    return {\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n      task: '',\r\n      timerDisplay: '00:00:00',\r\n      table_lines: [],\r\n      timer: null,\r\n      startTime: null,\r\n      endTime: null\r\n    };\r\n  },\r\n  methods: {\r\n    start_timer_operat() {\r\n      const all_time = this.hours * 3600 + this.minutes * 60 + this.seconds;\r\n      this.startTime = new Date();\r\n      this.endTime = new Date(this.startTime.getTime() + all_time * 1000);\r\n      this.updateTimerDisplay();\r\n      this.timer = setInterval(() => this.updateTimer(), 1000);\r\n      event.preventDefault();\r\n    },\r\n    updateTimer() {\r\n      const now = new Date();\r\n      if (now >= this.endTime) {\r\n        this.stop_timer_operat();\r\n      } else {\r\n        this.updateTimerDisplay();\r\n      }\r\n    },\r\n    updateTimerDisplay() {\r\n      const now = new Date();\r\n      const timeLeft = Math.max(0, this.endTime - now);\r\n      const hours = Math.floor(timeLeft / 3600000);\r\n      const minutes = Math.floor((timeLeft % 3600000) / 60000);\r\n      const seconds = Math.floor((timeLeft % 60000) / 1000);\r\n      this.timerDisplay = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    },\r\n    pause_timer_operat() {\r\n      if (this.timer) {\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n      } else {\r\n        this.start_timer_operat();\r\n      }\r\n    },\r\n    stop_timer_operat() {\r\n      if (this.timer) {\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n        this.timerDisplay = '00:00:00';\r\n        this.table_lines.push({\r\n          id: this.table_lines.length,\r\n          name: this.task,\r\n          start: this.startTime.toLocaleString(),\r\n          end: new Date().toLocaleString()\r\n        });\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n        \r\n  },\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}